# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-03 16:16
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('schools', '0004_auto_20160428_1730'),
    ]

    operations = [
        migrations.CreateModel(
            name='FunctionalSiteNearSchool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'functional_site_near_school',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FunctionalSiteOverlapsOsm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'functional_site_overlaps_osm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lines',
            fields=[
                ('ogc_fid', models.AutoField(primary_key=True, serialize=False)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.LineStringField(blank=True, null=True, srid=4326)),
                ('osm_id', models.CharField(blank=True, max_length=500, null=True)),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('highway', models.CharField(blank=True, max_length=500, null=True)),
                ('waterway', models.CharField(blank=True, max_length=500, null=True)),
                ('aerialway', models.CharField(blank=True, max_length=500, null=True)),
                ('barrier', models.CharField(blank=True, max_length=500, null=True)),
                ('man_made', models.CharField(blank=True, max_length=500, null=True)),
                ('other_tags', django.contrib.postgres.fields.hstore.HStoreField()),
            ],
            options={
                'db_table': 'lines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Multilinestrings',
            fields=[
                ('ogc_fid', models.AutoField(primary_key=True, serialize=False)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
                ('osm_id', models.CharField(blank=True, max_length=500, null=True)),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('type', models.CharField(blank=True, max_length=500, null=True)),
                ('other_tags', django.contrib.postgres.fields.hstore.HStoreField()),
            ],
            options={
                'db_table': 'multilinestrings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Multipolygons',
            fields=[
                ('ogc_fid', models.AutoField(primary_key=True, serialize=False)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('osm_id', models.CharField(blank=True, max_length=500, null=True)),
                ('osm_way_id', models.CharField(blank=True, max_length=500, null=True)),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('type', models.CharField(blank=True, max_length=500, null=True)),
                ('aeroway', models.CharField(blank=True, max_length=500, null=True)),
                ('amenity', models.CharField(blank=True, max_length=500, null=True)),
                ('admin_level', models.CharField(blank=True, max_length=500, null=True)),
                ('barrier', models.CharField(blank=True, max_length=500, null=True)),
                ('boundary', models.CharField(blank=True, max_length=500, null=True)),
                ('building', models.CharField(blank=True, max_length=500, null=True)),
                ('craft', models.CharField(blank=True, max_length=500, null=True)),
                ('geological', models.CharField(blank=True, max_length=500, null=True)),
                ('historic', models.CharField(blank=True, max_length=500, null=True)),
                ('land_area', models.CharField(blank=True, max_length=500, null=True)),
                ('landuse', models.CharField(blank=True, max_length=500, null=True)),
                ('leisure', models.CharField(blank=True, max_length=500, null=True)),
                ('man_made', models.CharField(blank=True, max_length=500, null=True)),
                ('military', models.CharField(blank=True, max_length=500, null=True)),
                ('natural', models.CharField(blank=True, max_length=500, null=True)),
                ('office', models.CharField(blank=True, max_length=500, null=True)),
                ('place', models.CharField(blank=True, max_length=500, null=True)),
                ('shop', models.CharField(blank=True, max_length=500, null=True)),
                ('sport', models.CharField(blank=True, max_length=500, null=True)),
                ('tourism', models.CharField(blank=True, max_length=500, null=True)),
                ('other_tags', django.contrib.postgres.fields.hstore.HStoreField()),
            ],
            options={
                'db_table': 'multipolygons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OtherRelations',
            fields=[
                ('ogc_fid', models.AutoField(primary_key=True, serialize=False)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.GeometryCollectionField(blank=True, null=True, srid=4326)),
                ('osm_id', models.CharField(blank=True, max_length=500, null=True)),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('type', models.CharField(blank=True, max_length=500, null=True)),
                ('other_tags', django.contrib.postgres.fields.hstore.HStoreField()),
            ],
            options={
                'db_table': 'other_relations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Points',
            fields=[
                ('ogc_fid', models.AutoField(primary_key=True, serialize=False)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('osm_id', models.CharField(blank=True, max_length=500, null=True)),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('barrier', models.CharField(blank=True, max_length=500, null=True)),
                ('highway', models.CharField(blank=True, max_length=500, null=True)),
                ('ref', models.CharField(blank=True, max_length=500, null=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('is_in', models.CharField(blank=True, max_length=500, null=True)),
                ('place', models.CharField(blank=True, max_length=500, null=True)),
                ('man_made', models.CharField(blank=True, max_length=500, null=True)),
                ('other_tags', django.contrib.postgres.fields.hstore.HStoreField()),
            ],
            options={
                'db_table': 'points',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImportLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('changeset', models.IntegerField()),
                ('change', models.TextField()),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='schools.School')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='schools.FunctionalSite')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
